unit Funcoes;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.FMXUI.Wait, FMX.ListBox, FMX.Layouts,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Objects, Data.DB,
  FireDAC.Comp.Client, FireDac.Stan.Param;


    function AtualizaDataSelecionada(Proximo: Boolean): String;
    function AtualizaTextoMes: String;
    function IncrementaNovoCodigo(Tbl: TDataSet; Codigo: String): Integer;
    function VerificaExisteDados(Tabela, CampoPesquisa, Parametro: String): Boolean;

implementation

uses fListaLancamento, VariaveisGlobais;

function AtualizaDataSelecionada(Proximo: Boolean): String;
begin
    if Proximo then
    begin
        if xNumeroMes = 12 then
        begin
            xNumeroMes := 1;
            Inc(xNumeroAno);
        end
        else
           Inc(xNumeroMes);
    end
    else
    begin
        if xNumeroMes = 1 then
        begin
            xNumeroMes := 12;
            Dec(xNumeroAno);
        end
        else
           Dec(xNumeroMes);
    end;
    Result := AtualizaTextoMes+ ' / '+xNumeroAno.ToString;
end;

function AtualizaTextoMes: String;
begin
    if xNumeroMes = 1 then       Result := 'Janeiro'
    else if xNumeroMes = 2 then  Result := 'Fevereiro'
    else if xNumeroMes = 3 then  Result := 'Março'
    else if xNumeroMes = 4 then  Result := 'Abril'
    else if xNumeroMes = 5 then  Result := 'Maio'
    else if xNumeroMes = 6 then  Result := 'Junho'
    else if xNumeroMes = 7 then  Result := 'Julho'
    else if xNumeroMes = 8 then  Result := 'Agosto'
    else if xNumeroMes = 9 then  Result := 'Setembro'
    else if xNumeroMes = 10 then Result := 'Outubro'
    else if xNumeroMes = 11 then Result := 'Novembro'
    else if xNumeroMes = 12 then Result := 'Dezembro'
    else Result := '';
end;



function IncrementaNovoCodigo(Tbl: TDataSet; Codigo: String): Integer;
var
  NovoCodigo: Integer;
begin
    Tbl.DisableControls;
    Tbl.Last;
    NovoCodigo := Tbl.FieldByName(Codigo).AsInteger + 1;
    Tbl.EnableControls;
    if not (Tbl.State in [dsInsert]) then
       Tbl.Insert;

    Tbl.FieldByName(Codigo).AsInteger := NovoCodigo;
    result := NovoCodigo;
end;


function VerificaExisteDados(Tabela, CampoPesquisa, Parametro: String): Boolean;
begin
    with FDQConsulta do
    begin
        Close;
        SQL.Clear;
        SQL.Add('SELECT '+CampoPesquisa+' FROM '+Tabela+' WHERE '+CampoPesquisa+' =:pCodigo');
        Params.ParamByName('pCodigo').AsInteger := Parametro.ToInteger;
        Open();

        if RecordCount > 0 then
            Result := True
        else
            Result := False;
    end;
end;


end.
